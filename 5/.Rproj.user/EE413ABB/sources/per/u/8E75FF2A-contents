url <- "http://www.nber.org/~rdehejia/data/nsw_treated.txt"
data_treated <- read.table(url, header = FALSE)
head(data_treated)
View(data_treated)
url<-"http://www.nber.org/~rdehejia/data/nsw_control.txt"
data_controlled<-read.table(url,header = FALSE)
head(data_controlled)
colnames(data_treated)
## assigning columns name for calrity 
colnames(data_treated) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
 
nrow(data)
str(data_treated)
summary(data_treated)
black_count<-table(data_treated$Black)
hispanic_count<-table(data_treated$Hispanic)
black_count
hispanic_count
## calculating the percentages of black and hispanic participation 
total_obs<-nrow(data_treated)
total_obs
# percentage of Black Participation
black_percentage<-sum(data_treated$Black==1)/total_obs*100
# Percentage of Hispanic participation 
hispanic_percentage<-sum(data_treated$Hispanic==1)/total_obs*100
# Print percentage 
cat("Percentage of Black Participation",round(black_percentage,2),"%\n")
cat("Percentage of Hispanic participation",round(hispanic_percentage,2),"%\n"
## Organizing result in table format 
summary_table<- data.frame(
  category=c("Black","Hispanic"),
  count=c(sum(data_treated$Black==1),sum(data_treated$Hispanic==1)),
  percentage=c(black_percentage,hispanic_percentage)
)
print(summary_table)
## Check the relationship between education and earning 
cor(data_treated$Education,data_treated$RE78)
## perform a reggression analysis 
model<- lm(RE78~Education,data=data_treated)
summary(model)
## combine both datasets
data<-rbind(data_treated,data_controlled)
# Assign column names correctly
colnames(data_treated) <- colnames(data_controlled) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
head(data)
nrow(data)
summary(data_treated)
summary(data_controlled)
## compute means values for each group
treated_means<-colMeans(data_treated[,-1])# Exclude first column 
controlled_means<-colMeans(data_controlled[,-1])
## create comparison table 
balance_table<-data.frame(
  covariate=colnames(data_treated)[-1],
  treated_Mean=treated_means,
  Control_Mean=controlled_means,
  difference=treated_means-controlled_means
)
print(balance_table)
## Checking if covariate differences are statistically significant :
## Defining ng a function to perform t-tests 
balance_test<- function(var){
  t.test(data_treated[[var]],data_controlled[[var]])
}
## apply function to all covariates 
covariates<-colnames(data_treated)[-1]
t_test_results<-lapply(covariates,balance_test)
print(t_test_results)
ncol(data)
## load ggplot2 for visualization 
install.packages("ggplot2")
library(ggplot2)
# create boxplots for key covariates 
ggplot(data,aes(x=factor(Treatment),y=Age))+
  geom_boxplot()+
  labs(title = "Age Distribution by Treatmet Grouph",x="Treatment Group",y="Age")
ggplot(data,aes(x=factor(Treatment),y=Education))+
  geom_boxplot()+
  labs(title="Education Distribution by Treatment Group",x="Treatment Group",y

## SMD- A common matric for balance assessment : 
install.packages("cobalt")
library(cobalt)
## compute standardized mean differences 
bal.tab(data,treat="Treatment",covs=covariates)
colnames(data)
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
treatment_vector<-data$Treatment## extract Treatment column as a vector
treatment_vector <- data$Treatment  # Extract Treatment column as a vector
bal.tab(data, treat = treatment_vector)

## Problem 2 
## Estimating the causal effect using OLS Regression 
## a simple regression
model<-lm(RE78~Treatment,data=data)
summary(model)
# The training program may have increased earnings by $886,but the effect is weak
# (p=0.0609).The model does not explain much variation in earnings. There are high variability in actual earnings 
# (Residuals range widely)
## as the result does not fit for the model , we will more covariates 

# control for More Covariates 
# Add age,education , prior earnings(RE75) to improve model accuracy:
model1<- lm(RE78~Treatment+Age+Education+RE75,data=data)
summary(model1)
## Prior earnings are the strongest predictor. Past financial stability is a key for future income.
# Performing propensity score matching(PSM)
# Load necessary packages 
install.packages("MatchIt")
library(MatchIt)
## Estimate propensity scores 
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
summary(ps_model)
colnames(data)
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", 
                    "NoDegree", "RE75", "RE78")

colnames(data_treated) <- colnames(data_controlled) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
data <- rbind(data_treated, data_controlled)
colnames(data)
data<-as.data.frame(data)
colnames(data) <- trimws(colnames(data))  # Removes extra spaces
class(data)
head(data$Age)
head(data[,2])
names(data)=="Age"
colnames(data) <- trimws(colnames(data))  # Remove leading/trailing spaces
colnames(data)[which(colnames(data) == "Age")] <- "Age"
# Correct column names first
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", 
                    "NoDegree", "RE75", "RE78")

# Fit the propensity score model (logistic regression)
ps_model <- glm(
  Treatment ~ Age + I(Age^2) + I(Age^3) + Education + I(Education^2) + 
    Black + Hispanic + Married + NoDegree + RE75 + RE78,
  data = data,
  family = binomial()  # Specify binomial family for logistic regression
)

# View model summary
summary(ps_model)
#  perform nearest Neighbor Matching 
matched_data <- matchit(Treatment ~ Age + Education + RE75, data = data, method = "nearest")
summary(matched_data)
# Regression analysis on matched data 
regression_ana<-lm(RE78 ~ Treatment, data = matched_data)
plot(matched_data,type="density")
matched_df <- match.data(matched_data)  # Extract matched dataset
regression_ana <- lm(RE78 ~ Treatment, data = matched_df)  # Run regression
summary(regression_ana)  # View results

install.packages("rbounds")  # Install package
library(rbounds)  # Load package

# Perform sensitivity analysis on matched data
psens(matched_df$RE78, matched_df$Treatment, gamma = 1.5)

psens(matched_df$RE78, matched_df$Treatment)



