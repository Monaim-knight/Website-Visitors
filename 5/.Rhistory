url <- "http://www.nber.org/~rdehejia/data/nsw_treated.txt"
data <- read.table(url, header = FALSE)
head(data)
View(data)
url<-"http://www.nber.org/~rdehejia/data/nsw_control.txt"
data1<-read.table(url,header = FALSE)
head(data1)
colnames(data,data1)
colnames(data)
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
data
nrow(data)
str(data)
summary(data)
black_count<-table(data$Black)
hispanic_count<-table(data$Hispanic)
black_count
hispanic_count
nrow(data)
nrow(data1)
url <- "http://www.nber.org/~rdehejia/data/nsw_treated.txt"
data_treated <- read.table(url, header = FALSE)
head(data_treated)
View(data_treated)
url<-"http://www.nber.org/~rdehejia/data/nsw_control.txt"
data_controlled<-read.table(url,header = FALSE)
head(data_controlled)
colnames(data_treated)
colnames(data_treated) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
str(data_treated)
summary(data_treated
summary(data_treated)
summary(data_treated)
black_count<-table(data_treated$Black)
hispanic_count<-table(data_treated$Hispanic)
black_count
hispanic_count
total_obs<-nrow(data_treated)
total_obs
total_obs
# percentage of Black Participation
black_percentage<-sum(data_treated$Black==1)/total_obs*100
# Percentage of Hispanic participation
hispanic_percentage<-sum(data_treated$Hispanic==1)/total_obs*100
# Print percentage
cat("Percentage of Black Participation",round(black_percentage,2),"%\n")
cat("Percentage of Hispanic participation",round(hispanic_percentage,2),"|%\n"
# percentage of Black Participation
black_percentage<-sum(data_treated$Black==1)/total_obs*100
black_percentage<-sum(data_treated$Black==1)/total_obs*100
# Percentage of Hispanic participation
hispanic_percentage<-sum(data_treated$Hispanic==1)/total_obs*100
cat("Percentage of Black Participation",round(black_percentage,2),"%\n")
cat("Percentage of Hispanic participation",round(hispanic_percentage,2),"%\n")
summary_table<- data.frame(
category=c("Black","Hispanic"),
count=c(sum(data_treated$Black==1),sum(data_treated$Hispanic==1)),
percentage=c(black_percentage,hispanic_percentage)
)
print(summary_table)
cor(data_treated$Education,data_treated$RE78)
model<- lm(RE78~Education,data=data_treated)
summary(model)
data<-rbind(data_treated,data_controlled)
colnames(treated) <- colnames(control) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
colnames(data_treated) <- colnames(data_controlled) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
data<-rbind(data_treated,data_controlled)
head(data)
nrow(data)
summary(data_treated)
summary(data_controlled)
summary(data_treated)
summary(data_controlled)
treated_mean<-colMeans(data_treated[,-1])# Exclude first column
controlled_mean<-colMeans(data_controlled[,-1])
treated_means<-colMeans(data_treated[,-1])# Exclude first column
controlled_means<-colMeans(data_controlled[,-1])
controlled_means<-colMeans(data_controlled[,-1])
## create comparison table
balance_table<-data.frame(
covariate=colnames(data_treated)[-1],
treated_Mean=treated_means,
Control_Mean=controlled_means,
difference=treated_means-controlled_means
)
print(balance_table)
balance_test<- function(var){
t.test(data_treated[[var]],data_controlled[[var]]
}
balance_test<- function(var){
t.test(data_treated[[var]],data_controlled[[var]])
}
covariates<-colnames(data_treated)[-1]
t_test_results<-lapply(covariates,balance_test)
print(t_test_results)
ncol(data)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
ggplot(data,aes(x=factor(Treatment),y=Age))+
geom_boxplot()+
labs(title = "Age Distribution by Treatmet Grouph",x="Treatment Group",y="Age")
ggplot(data,aes(x=factor(Treatment),y=Education))+
geom_boxplot()+
labs(title="Education Distribution by Treatment Group",x="Treatment Group",y="Education")
ggplot(data,aes(x=factor(Treatment),y=Age))+
geom_boxplot()+
labs(title = "Age Distribution by Treatmet Grouph",x="Treatment Group",y="Age")
install.packages("cobalt")
library(cobalt)
bal.tab(data,treat="Treatment",covs=covariates)
colnames(data)
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
bal.tab(data,treat="Treatment",covs=covariates)
treatment_vector<-data$Treatment
bal.tab(data,treat="Treatment",covs=covariates)
treatment_vector <- data$Treatment  # Extract Treatment column as a vector
bal.tab(data, treat = treatment_vector)
model<-lm(RE78~data_treated,data=data)
model<-lm(RE78~treatment_vector,data=data)
summary(data)
model<-lm(RE78~Treatment,data=data)
summary(data)
summary(data)
model<-lm(RE78~Treatment,data=data)
summary(model)
model1<- lm(RE78~Treatment+Age+Education+RE75,data=data)
summary(model1)
install.packages("MatchIt")
library(MatchIT)
library(MatchIt)
colnames(data)
# ps_model<-glm(Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education|^2)
+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
ps_model<-glm(Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
colnames(data_treated) <- colnames(data_controlled) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
colnames(data)
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married",
"NoDegree", "RE75", "RE78")
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married",
"NoDegree", "RE75", "RE78")
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
colnames(data_treated) <- colnames(data_controlled) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married", "NoDegree", "RE75", "RE78")
data <- rbind(data_treated, data_controlled)
colnames(data)
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
data<-as.data.frame(data)
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
colnames(data) <- trimws(colnames(data))  # Removes extra spaces
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
class(data)
head(data$Age)
head(data[,2])
names(data)=="Age"
colnames(data) <- trimws(colnames(data))  # Remove leading/trailing spaces
colnames(data)[which(colnames(data) == "Age")] <- "Age"
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
ps_model<-glm(data$Treatment~Age+I(Age^2)+I(Age^3)+Eduction+I(Education^2)+ Black + Hispanic +Married + NoDegree + RE75 + RE78)
# Correct column names first
colnames(data) <- c("Treatment", "Age", "Education", "Black", "Hispanic", "Married",
"NoDegree", "RE75", "RE78")
# Fit the propensity score model (logistic regression)
ps_model <- glm(
Treatment ~ Age + I(Age^2) + I(Age^3) + Education + I(Education^2) +
Black + Hispanic + Married + NoDegree + RE75 + RE78,
data = data,
family = binomial()  # Specify binomial family for logistic regression
)
# View model summary
summary(ps_model)
matched_data<- matchit(Treatment~Age+Education+RE75,data=data,method="nearest",replace=TRUE)
matched_data<- matchit(Treatment~Age+Education+RE75,data=data,method="nearest",replace=TRUE)
matched_data<- MatchIt(Treatment~Age+Education+RE75,data=data,method="nearest",replace=TRUE)
library(MatchIt)
matched_data<- MatchIt(Treatment~Age+Education+RE75,data=data,method="nearest",replace=TRUE)
install.packages("MatchIt")
install.packages("MatchIt")
matched_data <- matchit(Treatment ~ Age + Education + RE75, data = data, method = "nearest")
summary(matched_data)
regression_ana<-lm(RE78 ~ Treatment, data = matched_data)
regression_ana<-lm(RE78 ~ Treatment, data = matched_data)
plot(matched_data)
matched_df <- match.data(matched_data)  # Extract matched dataset
regression_ana <- lm(RE78 ~ Treatment, data = matched_df)  # Run regression
summary(regression_ana)  # View results
install.packages("rbounds")  # Install package
library(rbounds)  # Load package
# Perform sensitivity analysis on matched data
psens(matched_df$RE78, matched_df$Treatment, gamma = 1.5)
psens(matched_df$RE78, matched_df$Treatment)
plot(matched_data,type="density")
